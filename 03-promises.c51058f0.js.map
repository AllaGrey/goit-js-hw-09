{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EACEM,EAAAZ,GAASa,OAAOC,QACd,uBAAqBX,QAAiBC,QAI1CG,EACEK,EAAAZ,GAASa,OAAOE,QACd,sBAAoBZ,QAAeC,OAAW,GAInDA,EAAM,G,CAnCAY,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIhB,EAAQiB,OAAOF,EAAEG,cAAclB,MAAMmB,OACzC,MAAMC,EAAOH,OAAOF,EAAEG,cAAcE,KAAKD,OACnCE,EAASJ,OAAOF,EAAEG,cAAcG,OAAOF,OAE7C,IAAK,IAAIpB,EAAW,EAAGA,GAAYsB,EAAQtB,GAAY,EACrDD,EAAcC,EAAUC,GAAOsB,OAAOC,QACtCvB,GAASoB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay).then().catch();\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        );\n      } else {\n        reject(\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","success","failure","document","querySelector","addEventListener","e","preventDefault","Number","currentTarget","value","step","amount","then","catch"],"version":3,"file":"03-promises.c51058f0.js.map"}